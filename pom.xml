<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.fabric8</groupId>
  <artifactId>kubernetes-client-project</artifactId>
  <version>6.11.0</version>
  <packaging>pom</packaging>
  <name>Fabric8 :: Kubernetes :: Project</name>
  <description>Java client for Kubernetes and OpenShift</description>
  <url>https://github.com/fabric8io/kubernetes-client</url>
  <inceptionYear>2015</inceptionYear>
  <organization>
    <name>Red Hat</name>
    <url>https://redhat.com</url>
  </organization>
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>geeks</id>
      <name>Fabric8 Development Team</name>
      <organization>fabric8</organization>
      <organizationUrl>https://github.com/fabric8io/kubernetes-client</organizationUrl>
    </developer>
  </developers>
  <modules>
    <module>kubernetes-model-generator</module>
    <module>kubernetes-client-api</module>
    <module>kubernetes-client</module>
    <module>junit/mockwebserver</module>
    <module>junit/kubernetes-junit-jupiter</module>
    <module>junit/kubernetes-junit-jupiter-autodetected</module>
    <module>junit/kubernetes-server-mock</module>
    <module>openshift-client-api</module>
    <module>openshift-client</module>
    <module>extensions</module>
    <module>junit/openshift-server-mock</module>
    <module>kubernetes-examples</module>
    <module>platforms</module>
    <module>kubernetes-tests</module>
    <module>uberjar</module>
    <module>generator-annotations</module>
    <module>crd-generator</module>
    <module>java-generator</module>
    <module>httpclient-okhttp</module>
    <module>httpclient-vertx</module>
    <module>kubernetes-client-deps-compatibility-tests</module>
    <module>log4j</module>
  </modules>
  <scm>
    <connection>scm:git:git@github.com:fabric8io/kubernetes-client.git</connection>
    <developerConnection>scm:git:git@github.com:fabric8io/kubernetes-client.git</developerConnection>
    <tag>${project.version}</tag>
    <url>https://github.com/fabric8io/kubernetes-client/</url>
  </scm>
  <distributionManagement>
    <repository>
      <id>ossrh</id>
      <name>Sonatype OSS Repository</name>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
    <snapshotRepository>
      <id>ossrh</id>
      <name>Sonatype OSS Repository (Snapshots)</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>
  <properties>
    <maven.bundle.plugin.version>5.1.9</maven.bundle.plugin.version>
    <maven.scr.plugin.version>1.26.4</maven.scr.plugin.version>
    <maven.plugin.plugin.version>3.11.0</maven.plugin.plugin.version>
    <osgi.import></osgi.import>
    <javadoc.include.deps>false</javadoc.include.deps>
    <maven.javadoc.plugin.version>3.6.3</maven.javadoc.plugin.version>
    <jandex.plugin.version>1.2.3</jandex.plugin.version>
    <jackson.version>2.17.0</jackson.version>
    <sonar-maven-plugin.version>3.11.0.3922</sonar-maven-plugin.version>
    <jkube.version>1.16.1</jkube.version>
    <osgi.require-capability></osgi.require-capability>
    <maven-core.version>3.9.6</maven-core.version>
    <okhttp.version>3.12.12</okhttp.version>
    <slf4j.version>2.0.12</slf4j.version>
    <jandex.version>2.4.4.Final</jandex.version>
    <maven.antrun.plugin.version>3.1.0</maven.antrun.plugin.version>
    <log4j.version>2.23.1</log4j.version>
    <osgi.include.resources>${osgi.include.resources.default}</osgi.include.resources>
    <gmavenplus-plugin.version>3.0.2</gmavenplus-plugin.version>
    <exec.maven-plugin.version>3.2.0</exec.maven-plugin.version>
    <jackson.bundle.version>${jackson.version}</jackson.bundle.version>
    <generex.version>1.0.2</generex.version>
    <generex.bundle.version>1.0.1_1</generex.bundle.version>
    <commons-compress.version>1.26.1</commons-compress.version>
    <maven.buildhelper.plugin.version>3.5.0</maven.buildhelper.plugin.version>
    <spotless-maven-plugin.version>2.43.0</spotless-maven-plugin.version>
    <svc.version>1.1.1</svc.version>
    <conscrypt-openjdk-uber.bundle.version>1.4.2_1</conscrypt-openjdk-uber.bundle.version>
    <okio.version>1.17.6</okio.version>
    <snakeyaml.bundle.version>2.2</snakeyaml.bundle.version>
    <properties.maven.plugin.version>1.0.0</properties.maven.plugin.version>
    <maven.invoker.plugin.version>3.6.0</maven.invoker.plugin.version>
    <maven.enforcer.plugin.version>3.4.1</maven.enforcer.plugin.version>
    <osgi.private></osgi.private>
    <osgi.activator></osgi.activator>
    <vertx.version>4.5.6</vertx.version>
    <nexus-staging-maven-plugin>1.6.13</nexus-staging-maven-plugin>
    <osgi.export></osgi.export>
    <picocli.version>4.7.5</picocli.version>
    <bc-fips.version>1.0.2.4</bc-fips.version>
    <maven.compiler.plugin.version>3.13.0</maven.compiler.plugin.version>
    <maven.release.plugin.version>3.0.1</maven.release.plugin.version>
    <commons-io.version>2.15.1</commons-io.version>
    <osgi.provide-capability></osgi.provide-capability>
    <snakeyaml.version>2.7</snakeyaml.version>
    <gradle-api-maven-plugin.version>0.0.5</gradle-api-maven-plugin.version>
    <karaf.itest.skip>false</karaf.itest.skip>
    <gradle-api.version>8.5</gradle-api.version>
    <mockito.version>4.11.0</mockito.version>
    <okhttp.bundle.version>3.12.1_1</okhttp.bundle.version>
    <lombok.version>1.18.32</lombok.version>
    <automaton.bundle.version>1.11-8_1</automaton.bundle.version>
    <aries-spifly.bundle.version>1.3.0</aries-spifly.bundle.version>
    <maven.compiler.target>1.8</maven.compiler.target>
    <assertj.core.version>3.25.3</assertj.core.version>
    <awaitility.version>4.2.1</awaitility.version>
    <project.build.outputTimestamp>2024-03-25T12:01:42Z</project.build.outputTimestamp>
    <maven.dependency.plugin.version>3.6.1</maven.dependency.plugin.version>
    <scr.annotations.version>1.12.0</scr.annotations.version>
    <maven.shade.plugin.version>3.6.0</maven.shade.plugin.version>
    <maven.resources.plugin.version>3.3.1</maven.resources.plugin.version>
    <javadoc.doclint></javadoc.doclint>
    <validation-api.version>2.0.1.Final</validation-api.version>
    <junit.version>5.10.2</junit.version>
    <javadoc.package.excludes></javadoc.package.excludes>
    <bcpkix-fips.version>1.0.7</bcpkix-fips.version>
    <jsonschema2pojo.targetPackage>io.fabric8.kubernetes.api.model</jsonschema2pojo.targetPackage>
    <maven.gpg.plugin.version>3.1.0</maven.gpg.plugin.version>
    <maven.deploy.plugin.version>3.1.1</maven.deploy.plugin.version>
    <zjsonpatch.version>0.3.0</zjsonpatch.version>
    <bouncycastle.version>1.77</bouncycastle.version>
    <maven.jar.plugin.version>3.3.0</maven.jar.plugin.version>
    <maven.compiler.source>1.8</maven.compiler.source>
    <groovy-api.version>4.0.20</groovy-api.version>
    <javadoc.source.includes></javadoc.source.includes>
    <spock.version>2.3-groovy-4.0</spock.version>
    <kubernetes.webhooks.framework.version>1.1.3</kubernetes.webhooks.framework.version>
    <generate.targetDirectory>${project.basedir}/src/generated/java</generate.targetDirectory>
    <buildnumber.plugin.version>3.2.0</buildnumber.plugin.version>
    <maven.surefire.plugin.version>3.2.5</maven.surefire.plugin.version>
    <jsr305.version>3.0.2</jsr305.version>
    <maven.source.plugin.version>3.3.0</maven.source.plugin.version>
    <sundrio.version>0.103.1</sundrio.version>
    <asm.bundle.version>8.0.1</asm.bundle.version>
    <jetty.version>11.0.20</jetty.version>
    <guava.version>33.1.0-jre</guava.version>
    <maven.install.plugin.version>3.1.1</maven.install.plugin.version>
    <okio.bundle.version>1.15.0_1</okio.bundle.version>
    <osgi.bundles></osgi.bundles>
    <approvaltests.version>23.0.0</approvaltests.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <skipTests>false</skipTests>
    <jacoco-maven-plugin.version>0.8.11</jacoco-maven-plugin.version>
    <jsonschema2pojo.version>1.2.1</jsonschema2pojo.version>
    <osgi.include.resources.default>{maven-resources},
      /META-INF/jandex.idx=target/classes/META-INF/jandex.idx</osgi.include.resources.default>
    <osgi.export.service></osgi.export.service>
    <useIncrementalCompilation>false</useIncrementalCompilation>
    <osgi.dynamic.import></osgi.dynamic.import>
    <maven-plugin-annotations.version>3.11.0</maven-plugin-annotations.version>
    <exec.master>https://localhost:8443</exec.master>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>generator-annotations</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>java-generator-core</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>crd-generator-apt</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>crd-generator-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-log4j</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-core</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-common</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-rbac</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-admissionregistration</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-apps</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-autoscaling</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-apiextensions</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-batch</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-certificates</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-coordination</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-discovery</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-events</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-extensions</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-flowcontrol</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-gatewayapi</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-networking</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-metrics</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-policy</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-scheduling</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-storageclass</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-node</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-resource</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-model-clusterautoscaling</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-model-config</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-model-operator</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-model-operatorhub</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-model-machine</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-model-monitoring</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-model-storageversionmigrator</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-model-tuned</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-model-console</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-model-machineconfig</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-model-miscellaneous</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-model-whereabouts</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-model-hive</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-model-installer</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-client-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-client-api</artifactId>
        <version>${project.version}</version>
        <type>test-jar</type>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-httpclient-okhttp</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-httpclient-jdk</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-httpclient-jetty</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-httpclient-vertx</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-client-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-client</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-client</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>mockwebserver</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-junit-jupiter</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-junit-jupiter-autodetected</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-server-mock</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-server-mock</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>knative-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>knative-client</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>tekton-model-v1</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>tekton-model-v1alpha1</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>tekton-model-v1beta1</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>tekton-model-triggers-v1alpha1</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>tekton-model-triggers-v1beta1</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>tekton-client</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>istio-model-v1alpha3</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>istio-model-v1beta1</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>istio-client</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>volcano-model-v1beta1</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>volcano-client</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>open-cluster-management-agent-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>open-cluster-management-apps-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>open-cluster-management-cluster-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>open-cluster-management-discovery-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>open-cluster-management-observability-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>open-cluster-management-operator-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>open-cluster-management-placementruleapps-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>open-cluster-management-policy-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>open-cluster-management-search-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>open-cluster-management-client</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>open-virtual-networking-model-v1</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>open-virtual-networking-client</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>certmanager-model-v1alpha2</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>certmanager-model-v1alpha3</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>certmanager-model-v1beta1</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>certmanager-model-v1</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>certmanager-client</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>chaosmesh-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>chaosmesh-client</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>servicecatalog-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>servicecatalog-client</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>verticalpodautoscaler-model-v1</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>verticalpodautoscaler-client</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>volumesnapshot-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>volumesnapshot-client</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kube-api-test</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kube-api-test-client-inject</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>${jackson.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.snakeyaml</groupId>
        <artifactId>snakeyaml-engine</artifactId>
        <version>${snakeyaml.version}</version>
      </dependency>
      <dependency>
        <groupId>io.sundr</groupId>
        <artifactId>builder-annotations</artifactId>
        <version>${sundrio.version}</version>
        <scope>provided</scope>
        <exclusions>
          <exclusion>
            <groupId>com.sun</groupId>
            <artifactId>tools</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.sundr</groupId>
        <artifactId>transform-annotations</artifactId>
        <version>${sundrio.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>io.sundr</groupId>
        <artifactId>sundr-codegen-velocity-nodeps</artifactId>
        <version>${sundrio.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.squareup.okhttp3</groupId>
        <artifactId>okhttp</artifactId>
        <version>${okhttp.version}</version>
      </dependency>
      <dependency>
        <groupId>com.squareup.okhttp3</groupId>
        <artifactId>mockwebserver</artifactId>
        <version>${okhttp.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-compress</artifactId>
        <version>${commons-compress.version}</version>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>org.apache.maven</groupId>
        <artifactId>maven-core</artifactId>
        <version>${maven-core.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.maven.plugin-tools</groupId>
        <artifactId>maven-plugin-annotations</artifactId>
        <version>${maven-plugin-annotations.version}</version>
      </dependency>
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcprov-jdk18on</artifactId>
        <version>${bouncycastle.version}</version>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcpkix-jdk18on</artifactId>
        <version>${bouncycastle.version}</version>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-client</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty.http2</groupId>
        <artifactId>http2-http-client-transport</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty.websocket</groupId>
        <artifactId>websocket-jetty-client</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-server</artifactId>
        <version>${jetty.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>${slf4j.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-slf4j2-impl</artifactId>
        <version>${log4j.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>${log4j.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-core</artifactId>
        <version>${vertx.version}</version>
      </dependency>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-web-client</artifactId>
        <version>${vertx.version}</version>
        <exclusions>
          <exclusion>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-uri-template</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-web</artifactId>
        <version>${vertx.version}</version>
      </dependency>
      <dependency>
        <groupId>info.picocli</groupId>
        <artifactId>picocli</artifactId>
        <version>${picocli.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>zjsonpatch</artifactId>
        <version>${zjsonpatch.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-inline</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-params</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj.core.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.awaitility</groupId>
        <artifactId>awaitility</artifactId>
        <version>${awaitility.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.spockframework</groupId>
        <artifactId>spock-core</artifactId>
        <version>${spock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>javax.validation</groupId>
        <artifactId>validation-api</artifactId>
        <version>${validation-api.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.approvaltests</groupId>
        <artifactId>approvaltests</artifactId>
        <version>${approvaltests.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.javaoperatorsdk</groupId>
        <artifactId>kubernetes-webhooks-framework-core</artifactId>
        <version>${kubernetes.webhooks.framework.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <repositories>
    <repository>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>sonatype-maven-org</id>
      <name>Sonatype Maven Repository (maven.org)</name>
      <url>https://repo1.maven.org/maven2/</url>
    </repository>
  </repositories>
  <build>
    <resources>
      <resource>
        <directory>target/classes</directory>
        <includes>
          <include>META-INF/services/io.fabric8.kubernetes.api.model.KubernetesResource</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>${exec.maven-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven.compiler.plugin.version}</version>
          <configuration>
            <showDeprecation>true</showDeprecation>
            <showWarnings>true</showWarnings>
            <compilerArgument>-Xlint:unchecked</compilerArgument>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven.jar.plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven.javadoc.plugin.version}</version>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven.source.plugin.version}</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven.surefire.plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${maven.antrun.plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven.dependency.plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <version>${maven.release.plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>${maven.gpg.plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven.deploy.plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven.resources.plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven.install.plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven.enforcer.plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-plugin-plugin</artifactId>
          <version>${maven.plugin.plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-invoker-plugin</artifactId>
          <version>${maven.invoker.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.jboss.jandex</groupId>
          <artifactId>jandex-maven-plugin</artifactId>
          <version>${jandex.plugin.version}</version>
          <executions>
            <execution>
              <id>make-index</id>
              <goals>
                <goal>jandex</goal>
              </goals>
              <inherited>true</inherited>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>org.jboss</groupId>
              <artifactId>jandex</artifactId>
              <version>${jandex.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonar-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.jsonschema2pojo</groupId>
          <artifactId>jsonschema2pojo-maven-plugin</artifactId>
          <version>${jsonschema2pojo.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>generate</goal>
              </goals>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>io.fabric8</groupId>
              <artifactId>kubernetes-model-jsonschema2pojo</artifactId>
              <version>${project.version}</version>
            </dependency>
          </dependencies>
          <configuration>
            <customAnnotator>io.fabric8.kubernetes.jsonschema2pojo.KubernetesTypeAnnotator</customAnnotator>
            <customRuleFactory>io.fabric8.kubernetes.jsonschema2pojo.Fabric8RuleFactory</customRuleFactory>
            <sourceDirectory>${project.basedir}/src/main/resources/schema</sourceDirectory>
            <targetPackage>${jsonschema2pojo.targetPackage}</targetPackage>
            <includeConstructors>true</includeConstructors>
            <includeJsr303Annotations>false</includeJsr303Annotations>
            <includeToString>false</includeToString>
            <includeHashcodeAndEquals>false</includeHashcodeAndEquals>
            <removeOldOutput>true</removeOldOutput>
            <outputDirectory>${generate.targetDirectory}</outputDirectory>
            <annotationStyle>none</annotationStyle>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.marcnuri.plugins</groupId>
          <artifactId>gradle-api-maven-plugin</artifactId>
          <version>${gradle-api-maven-plugin.version}</version>
          <extensions>true</extensions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jboss.jandex</groupId>
        <artifactId>jandex-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report</id>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <inherited>true</inherited>
        <configuration>
          <environmentVariables>
            <ENV_VAR_EXISTS>value</ENV_VAR_EXISTS>
            <ENV_VAR_EXISTS_BOOLEAN>true</ENV_VAR_EXISTS_BOOLEAN>
          </environmentVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>${maven.bundle.plugin.version}</version>
        <extensions>true</extensions>
        <inherited>true</inherited>
        <configuration>
          <instructions>
            <Bundle-Name>${project.name}</Bundle-Name>
            <Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>
            <Export-Package>${osgi.export}</Export-Package>
            <Import-Package>${osgi.import}</Import-Package>
            <DynamicImport-Package>${osgi.dynamic.import}</DynamicImport-Package>
            <Require-Capability>${osgi.require-capability}</Require-Capability>
            <Provide-Capability>${osgi.provide-capability}</Provide-Capability>
            <Private-Package>${osgi.private}</Private-Package>
            <Require-Bundle>${osgi.bundles}</Require-Bundle>
            <Bundle-Activator>${osgi.activator}</Bundle-Activator>
            <Export-Service>${osgi.export.service}</Export-Service>
            <Include-Resource>${osgi.include.resources}</Include-Resource>
            <_removeheaders>Bnd-LastModified</_removeheaders>
            <_reproducible>true</_reproducible>
          </instructions>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${maven.buildhelper.plugin.version}</version>
        <executions>
          <execution>
            <id>parse-version</id>
            <goals>
              <goal>parse-version</goal>
            </goals>
          </execution>
        </executions>
        <inherited>true</inherited>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>${maven.gpg.plugin.version}</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <gpgArguments>
                <arg>--batch</arg>
                <arg>--pinentry-mode</arg>
                <arg>loopback</arg>
              </gpgArguments>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-release-plugin</artifactId>
            <version>${maven.release.plugin.version}</version>
            <configuration>
              <autoVersionSubmodules>true</autoVersionSubmodules>
              <pushChanges>false</pushChanges>
              <localCheckout>true</localCheckout>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-enforcer-plugin</artifactId>
            <version>${maven.enforcer.plugin.version}</version>
            <executions>
              <execution>
                <id>enforce-no-snapshots</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireReleaseDeps>
                      <message>No Snapshots Allowed!</message>
                    </requireReleaseDeps>
                  </rules>
                  <fail>false</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration>
                  <doclint>${javadoc.doclint}</doclint>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <includeDependencySources>${javadoc.include.deps}</includeDependencySources>
              <dependencySourceIncludes>
                <dependencySourceInclude>${javadoc.source.includes}</dependencySourceInclude>
              </dependencySourceIncludes>
              <excludePackageNames>${javadoc.package.excludes}</excludePackageNames>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-source-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
      <properties>
        <karaf.itest.skip>true</karaf.itest.skip>
      </properties>
    </profile>
    <profile>
      <id>itests</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven.surefire.plugin.version}</version>
            <configuration>
              <skipTests>false</skipTests>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${maven.surefire.plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <modules>
        <module>kubernetes-itests</module>
        <module>chaos-tests</module>
      </modules>
    </profile>
    <profile>
      <id>doclint-java8-disable</id>
      <activation>
        <jdk>[1.8,)</jdk>
      </activation>
      <properties>
        <javadoc.doclint>none</javadoc.doclint>
      </properties>
    </profile>
    <profile>
      <id>sonar</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.sonarsource.scanner.maven</groupId>
            <artifactId>sonar-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
      <properties>
        <sonar.projectName>Fabric8 :: Kubernetes Client</sonar.projectName>
        <karaf.itest.skip>true</karaf.itest.skip>
        <sonar.login></sonar.login>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.organization>fabric8io</sonar.organization>
        <sonar.links.ci>https://github.com/fabric8io/kubernetes-client/actions</sonar.links.ci>
        <sonar.exclusions>**/src/generated/java/**/*</sonar.exclusions>
        <sonar.projectKey>fabric8io_kubernetes-client</sonar.projectKey>
        <sonar.links.issue>https://github.com/fabric8io/kubernetes-client/issues</sonar.links.issue>
        <sonar.moduleKey>${project.artifactId}</sonar.moduleKey>
        <sonar.links.scm>https://github.com/fabric8io/kubernetes-client</sonar.links.scm>
        <sonar.links.homepage>https://github.com/fabric8io/kubernetes-client</sonar.links.homepage>
        <sonar.password></sonar.password>
        <sonar.coverage.exclusions>**/kubernetes-examples/**/*,**/extensions/**/examples/**/*</sonar.coverage.exclusions>
      </properties>
    </profile>
    <profile>
      <id>java9-plus</id>
      <activation>
        <jdk>[9,)</jdk>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.jsonschema2pojo</groupId>
              <artifactId>jsonschema2pojo-maven-plugin</artifactId>
              <dependencies>
                <dependency>
                  <groupId>javax.annotation</groupId>
                  <artifactId>javax.annotation-api</artifactId>
                  <version>1.3.2</version>
                </dependency>
              </dependencies>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
      <properties>
        <maven.compiler.release>8</maven.compiler.release>
      </properties>
    </profile>
    <profile>
      <id>java-11</id>
      <activation>
        <jdk>[11,)</jdk>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.sundr</groupId>
            <artifactId>sundr-maven-plugin</artifactId>
            <version>${sundrio.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>generate-bom</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <boms>
                <bom>
                  <artifactId>kubernetes-client-bom</artifactId>
                  <name>Fabric8 :: Kubernetes :: Bom</name>
                  <properties>
                    <skipStagingRepositoryClose>true</skipStagingRepositoryClose>
                    <sonar.skip>true</sonar.skip>
                  </properties>
                </bom>
                <bom>
                  <artifactId>kubernetes-client-bom-with-deps</artifactId>
                  <name>Fabric8 :: Kubernetes :: Bom with Dependencies</name>
                  <dependencies>
                    <includes>
                      <include>io.sundr*:*</include>
                      <include>org.projectlombok:lombok*</include>
                      <include>com.squareup*:*</include>
                      <include>com.fasterxml.jackson*:*</include>
                      <include>io.fabric8:kubernetes-model-core*</include>
                      <include>io.fabric8:kubernetes-model-rbac*</include>
                      <include>io.fabric8:kubernetes-model-admissionregistration*</include>
                      <include>io.fabric8:kubernetes-model-apiextensions*</include>
                      <include>io.fabric8:kubernetes-model-apps*</include>
                      <include>io.fabric8:kubernetes-model-autoscaling*</include>
                      <include>io.fabric8:kubernetes-model-batch*</include>
                      <include>io.fabric8:kubernetes-model-certificates*</include>
                      <include>io.fabric8:kubernetes-model-coordination*</include>
                      <include>io.fabric8:kubernetes-model-discovery*</include>
                      <include>io.fabric8:kubernetes-model-events*</include>
                      <include>io.fabric8:kubernetes-model-extensions*</include>
                      <include>io.fabric8:kubernetes-model-gatewayapi*</include>
                      <include>io.fabric8:kubernetes-model-networking*</include>
                      <include>io.fabric8:kubernetes-model-node*</include>
                      <include>io.fabric8:kubernetes-model-metrics*</include>
                      <include>io.fabric8:kubernetes-model-policy*</include>
                      <include>io.fabric8:kubernetes-model-scheduling*</include>
                      <include>io.fabric8:kubernetes-model-storageclass*</include>
                      <include>io.fabric8:kubernetes-model-resource*</include>
                      <include>io.fabric8:openshift-model*</include>
                    </includes>
                  </dependencies>
                  <properties>
                    <skipStagingRepositoryClose>true</skipStagingRepositoryClose>
                    <sonar.skip>true</sonar.skip>
                  </properties>
                </bom>
              </boms>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <modules>
        <module>httpclient-jdk</module>
        <module>httpclient-jetty</module>
        <module>httpclient-tests</module>
        <module>junit/kube-api-test</module>
      </modules>
    </profile>
    <profile>
      <id>javadoc-test</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration>
                  <doclint>${javadoc.doclint}</doclint>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <includeDependencySources>${javadoc.include.deps}</includeDependencySources>
              <dependencySourceIncludes>
                <dependencySourceInclude>${javadoc.source.includes}</dependencySourceInclude>
              </dependencySourceIncludes>
              <excludePackageNames>${javadoc.package.excludes}</excludePackageNames>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
